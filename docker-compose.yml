version: '3.7'

# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://username:password@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True

x-airflow-image: &airflow_image apache/airflow:2.1.2
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
    
services:

    mongo:
        container_name: mongo
        image: mongo
        restart: always
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: username
            MONGO_INITDB_ROOT_PASSWORD: password
        networks:
            - my_network

    mongo-express:
        container_name: mongo-express
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: username
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
            ME_CONFIG_MONGODB_URL: mongodb://username:password@mongo:27017/
        networks:
            - my_network

    postgres:
        image: postgres
        container_name: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: username
            POSTGRES_PASSWORD: password
            POSTGRES_DB: airflow
        networks: 
            - my_network
    
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4_container
        restart: always
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@email.com
            PGADMIN_DEFAULT_PASSWORD: admin
        networks:
            - my_network

    init:
        image: *airflow_image
        container_name: airflow-init
        restart: always
        depends_on:
            - postgres
        environment: *airflow_environment
        entrypoint: /bin/bash
        command: |
            -c 'pip install apache-airflow && \
                airflow db init && \
                airflow users create --username username --password password \
                --firstname Admin --lastname Admin --role Admin --email admin@email.com'

    webserver:
        image: *airflow_image
        container_name: airflow-webserver
        restart: always
        depends_on:
            - postgres
            - init
        ports:
            - "8080:8080"
        volumes:
            - logs:/opt/airflow/logs
        environment: *airflow_environment
        command: |
            -c 'pip install apache-airflow && \
                airflow db init && \
                airflow users create --username username --password password \
                --firstname Admin --lastname Admin --role Admin --email admin@email.com && \
                airflow webserver'
        networks: 
            - my_network

    scheduler:
        image: *airflow_image
        container_name: airflow-scheduler
        restart: always
        depends_on:
            - postgres
        volumes:
            - logs:/opt/airflow/logs
            - ./dags:/opt/airflow/dags
        environment: *airflow_environment
        command: scheduler
        networks: 
            - my_network

volumes:
    logs:

networks:
    my_network: